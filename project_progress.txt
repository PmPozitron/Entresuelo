11/01/15:
Доделана работа с InventoryDetails & CategoryDetails;

ToDo:
Разобраться с добавлением сущностей в БД.
На данный момент начата работа над формой добавления Item.

01/02/15:
    На сегодня:
        - сделать валидацию формы добавления айтема;
        - сделать для этой же формы стиль;
06/02/15:
    добавление айтема (без дитейлс элементов) реализовано вместе с валидацией, но без стилей.

23/02/15:
    сделано добавление локации (без валидации);

    в следующий раз: 
        добавить валидацию локациям (реализовать уже созданный класс);
        сделать добавление категорий (как собственно категорий);
        сделать добавление категори дитейлс при сохранении айтемов (как в жсп, так и в джаве);
        сделать добавление айтема в контейнер при его сохранении (инвентори дитейлс).
    
24/02/15:
    сделана базовая валидация при добавлении локации;
    сделано добавление категорий вместе с базовой валидацией;

28/02/15:
    сделать добавление категори дитейлс и инвентори дитейлс,
    уже начата работа над созданием м-да public CategoryDetails getNewEntity(SimpleItemAdder itemAdder) в CategoryDetailsManager.
    добавить такой метод в интерфейс и дать его всем;
    так же в интерфейсе служб (и, видимо, дао) нужен метод, возвращающий сущность по айди.

01/02/15:
    категори дитейлс и инвентори дитейлс успешно сохраняются в БД при сохранении айтема с соот-щей формы;
    надо сделать update + delete - видимо, форму для просмотра деталей с кнопкой для активации режима редактирования;

07/03/2015:
    доделан функционал редактирования и удаления айтемов (вместе со всеми дитейлс);

    в следующий раз:
        доделать редактирование и удаление локациям и категориям;
        запихнуть все операции по обработке айтема с его дитейлс в транзакции;

08/03/2015:
    майэскуэль воркбенчем добавлены unique ограничения к полю name в таблицах item, location, category;
    сделано удаление локаций (просто делит фром, без проверки используемости, т.е. используемую локацию удалить нельзя);
    сделано удаление категорий (просто делит фром, без проверки используемости, т.е. используемую категорию удалить нельзя);
    логгер переделан на log4j.properties конфигурацию, надо будет обновить путь до файла с логом так,
    что бы он указывал не на каталина хоум, а на папке, где именно расмещено приложение.
    это важно при in place deployment, когда приложение диплоится внутри своей же папки target.
============================================================================================================================================    
    http://stackoverflow.com/questions/216781/log4j-configuring-a-web-app-to-use-a-relative-path
    done it in this way.

        Added a ServletContextListener that does the following:

        public void contextInitialized(ServletContextEvent event) {
                ServletContext context = event.getServletContext();
                System.setProperty("rootPath", context.getRealPath("/"));
        }

        Then in the log4j.properties file:

        log4j.appender.file.File=${rootPath}WEB-INF/logs/MyLog.log

        By doing it in this way Log4j will write into the right folder as long as you 
        don't use it before the "rootPath" system property has been set. 
        This means that you cannot use it from the ServletContextListener itself 
        but you should be able to use it from anywhere else in the app.

        It should work on every web container and OS as it's not dependent on a container specific 
        system property and it's not affected by OS specific path issues. 
        Tested with Tomcat and Orion web containers and on Windows and Linux and it works fine so far.
============================================================================================================================================    

09/03/13:
    с транзакциями получается такая ситуация: при добавлении <tx:annotation-driven transaction-manager="txManager" /> и 
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    в контекст + @Transactional на AbstractManager (дополнительно @Transactional(propagation = Propagation.REQUIRED, readOnly = false) на методы)
    механизм работы с транзакциями работает, но почему-то при вызове ((InventoryDetailsManager) inventoryDetailsManager).getAllInventories();
    (видимо, для всех вызовов  методов с кастом) вылезает иксепшн, что невозможно скастить com.sun.proxy к InventoryDetailsManager.
    Я пробовал в MainController объявить явно как InventoryDetailsManager (а не AbstractManager) и остальные тоже пробовал - тогда валится приложение полностью.
    Пока отключу @Transactional у AbstractManager. При ближайшем рефакторнге нужно максимум dao & service функционала вынести в интерфейс, 
    а то и вообще заменить интерфейс на абстрактный класс с несколькими базовыми имплементированными методами (select_all, select_where).

10/03/15:
    начата работа над оформлением - стили вынесены в отдельные css файлы.